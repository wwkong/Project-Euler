source('~/GitHub/Project-Euler/Statistics/stats.R')
install.packages("stringr")
source('~/GitHub/Project-Euler/Statistics/stats.R')
install.packages("ggplot2")
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/.active-rstudio-document')
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/GitHub/Project-Euler/Statistics/stats.R')
install.packages("stringr")
install.packages("ggplot2")
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/GitHub/Project-Euler/Statistics/stats.R')
print(p)
require(stringr)
require(ggplot2)
require(reshape2)
# Define the upper bound on our total time (in seconds)
upperBound = 60
# Initialize the hooks and lists
statsFiles <- list.files(pattern=".(.hstats)")
pNum <- c()
INIT <- c()
MUT <- c()
GC <- c()
EXIT <- c()
TOTAL <- c()
# Main loop
for(file in statsFiles) {
fName <- file
pNumStr <- substr(fName,6,9)
pNum <- c(pNum, pNumStr) # add to project name list
conn <- file(fName, 'r')
contents <- readLines(conn)
close(conn)
# Find and add the appropriate times
vINIT <- as.double(str_extract(contents, "([0-9]+)\\.([0-9][0-9])")[12])
vMUT <- as.double(str_extract(contents, "([0-9]+)\\.([0-9][0-9])")[13])
vGC <- as.double(str_extract(contents, "([0-9]+)\\.([0-9][0-9])")[14])
vEXIT <- as.double(str_extract(contents, "([0-9]+)\\.([0-9][0-9])")[15])
vTOTAL <- as.double(str_extract(contents, "([0-9]+)\\.([0-9][0-9])")[16])
INIT <- c(INIT, vINIT)
MUT <- c(MUT, vMUT)
GC <- c(GC, vGC)
EXIT <- c(EXIT, vEXIT)
TOTAL <- c(TOTAL, vTOTAL)
rm(pNumStr,vINIT,vMUT,vGC,vEXIT,vTOTAL)
}
# Do some cleaning up
rm(file,conn,contents,statsFiles,fName)
# Generate our df and apply our upper bound
pNum = as.factor(pNum)
peData <- data.frame(pNum,INIT,MUT,GC,EXIT,TOTAL)
peData <- subset(peData,TOTAL < upperBound)
peData <- peData[,1:5]
rm(pNum,INIT,MUT,GC,EXIT,TOTAL,upperBound)
# Melt our data
peDataMelted = melt(peData, id.vars=c("pNum"), measure.vars=c("INIT","MUT","GC","EXIT"),
variable.name="timeType", value.name="time")
# Plot
p <-  ggplot(peDataMelted, aes(x=pNum, y=time)) +
geom_bar(aes(fill=timeType),data=peDataMelted) +
xlab(label = 'Project Euler Problem Number') +
ylab(label = 'Total Run Time (seconds)') +
ggtitle(label = 'Project Euler Run Time Comparisons') +
theme(plot.title = element_text(size = 24),
axis.text.x = element_text(angle = 90, hjust = 1),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18)) +
scale_fill_discrete(name = "Component")
print(p)
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/GitHub/Project-Euler/Statistics/stats.R')
print(p)
# Export plot to pdf
ggsave("peComparisons.pdf", width=12, height=8, dpi=100)
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/GitHub/Project-Euler/Statistics/stats.R')
require(stringr)
require(ggplot2)
require(reshape2)
# Define the upper bound on our total time (in seconds)
upperBound = 60
# Initialize the hooks and lists
statsFiles <- list.files(pattern=".(.hstats)")
pNum <- c()
INIT <- c()
MUT <- c()
GC <- c()
EXIT <- c()
TOTAL <- c()
# Main loop
for(file in statsFiles) {
fName <- file
pNumStr <- substr(fName,6,9)
pNum <- c(pNum, pNumStr) # add to project name list
conn <- file(fName, 'r')
contents <- readLines(conn)
close(conn)
# Find and add the appropriate times
vINIT <- as.double(str_extract(contents, "([0-9]+)\\.([0-9][0-9])")[12])
vMUT <- as.double(str_extract(contents, "([0-9]+)\\.([0-9][0-9])")[13])
vGC <- as.double(str_extract(contents, "([0-9]+)\\.([0-9][0-9])")[14])
vEXIT <- as.double(str_extract(contents, "([0-9]+)\\.([0-9][0-9])")[15])
vTOTAL <- as.double(str_extract(contents, "([0-9]+)\\.([0-9][0-9])")[16])
INIT <- c(INIT, vINIT)
MUT <- c(MUT, vMUT)
GC <- c(GC, vGC)
EXIT <- c(EXIT, vEXIT)
TOTAL <- c(TOTAL, vTOTAL)
rm(pNumStr,vINIT,vMUT,vGC,vEXIT,vTOTAL)
}
# Do some cleaning up
rm(file,conn,contents,statsFiles,fName)
# Generate our df and apply our upper bound
pNum = as.factor(pNum)
peData <- data.frame(pNum,INIT,MUT,GC,EXIT,TOTAL)
peData <- subset(peData,TOTAL < upperBound)
peData <- peData[,1:5]
rm(pNum,INIT,MUT,GC,EXIT,TOTAL,upperBound)
# Melt our data
peDataMelted = melt(peData,
id.vars=c("pNum"),
measure.vars=c("INIT","MUT","GC","EXIT"),
variable.name="timeType",
value.name="time")
# Plot
p <-  ggplot() +
geom_bar(aes(x=pNum, y=time, fill=timeType),data=peDataMelted,stat="identity") +
xlab(label = 'Project Euler Problem Number') +
ylab(label = 'Total Run Time (seconds)') +
ggtitle(label = 'Project Euler Run Time Comparisons') +
theme(plot.title = element_text(size = 24),
axis.text.x = element_text(angle = 90, hjust = 1),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18)) +
scale_fill_discrete(name = "Component")
print(p)
ggsave("peComparisons.pdf", width=12, height=8, dpi=100)
write.csv(peData,"peData.csv",row.names=FALSE)
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/GitHub/Project-Euler/Statistics/stats.R')
?dev.copy2pdf
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/GitHub/Project-Euler/Statistics/stats.R')
axis.text.x = element_text(angle = 90, hjust = 1),
source('~/GitHub/Project-Euler/Statistics/stats.R')
dev.copy2pdf("peComparisons.pdf", width=12, height=8)
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/.active-rstudio-document')
# Export plot to pdf
Sys.sleep(1)
ggsave("peComparisons.pdf", width=12, height=8, dpi=100)
# Export data to csv
write.csv(peData,"peData.csv",row.names=FALSE)
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('D:/TEMP/PE/Old/stats.R')
View(peDataMelted)
fName = "stats0046.hstats"
pNum <- c()
INIT <- c()
MUT <- c()
GC <- c()
EXIT <- c()
TOTAL <- c()
pNumStr <- substr(fName,6,9)
pNum <- c(pNum, pNumStr) # add to project name list
conn <- file(fName, 'r')
contents <- readLines(conn)
close(conn)
# Find and add the appropriate times
vINIT <- as.double(str_extract(grep("INIT.*time.*[0-9]",contents, value=TRUE),
"([0-9]+)\\.([0-9][0-9])"))
vMUT <- as.double(str_extract(grep("MUT.*time.*[0-9]",contents, value=TRUE),
"([0-9]+)\\.([0-9][0-9])"))
vGC <- as.double(str_extract(grep("GC.*time.*[0-9]",contents, value=TRUE),
"([0-9]+)\\.([0-9][0-9])"))
vEXIT <- as.double(str_extract(grep("EXIT.*time.*[0-9]",contents, value=TRUE),
"([0-9]+)\\.([0-9][0-9])"))
vTOTAL <- as.double(str_extract(grep("Total.*time.*[0-9]",contents, value=TRUE),
"([0-9]+)\\.([0-9][0-9])"))
INIT <- c(INIT, vINIT)
MUT <- c(MUT, vMUT)
GC <- c(GC, vGC)
EXIT <- c(EXIT, vEXIT)
TOTAL <- c(TOTAL, vTOTAL)
rm(pNumStr,vINIT,vMUT,vGC,vEXIT,vTOTAL)
fix(GC)
grep("GC.*time.*[0-9]",contents, value=TRUE)
grep("GC.*time.*[0-9]*.s",contents, value=TRUE)
source('~/.active-rstudio-document')
GC.*time.*[0-9]*.[^%]",contents, value=TRUE)
grep("GC.*time.*[0-9]*.[^\%]",contents, value=TRUE)
grep("GC.*time.*[0-9]*.[^\\%]",contents, value=TRUE)
pNumStr <- substr(fName,6,9)
pNum <- c(pNum, pNumStr) # add to project name list
conn <- file(fName, 'r')
contents <- readLines(conn)
close(conn)
fName = "stats0046.hstats"
pNumStr <- substr(fName,6,9)
pNum <- c(pNum, pNumStr) # add to project name list
conn <- file(fName, 'r')
contents <- readLines(conn)
close(conn)
pNum <- c()
INIT <- c()
MUT <- c()
GC <- c()
EXIT <- c()
TOTAL <- c()
vINIT <- as.double(str_extract(grep("INIT.*time.*[0-9]",contents, value=TRUE),
"([0-9]+)\\.([0-9][0-9])"))
vMUT <- as.double(str_extract(grep("MUT.*time.*[0-9]",contents, value=TRUE),
"([0-9]+)\\.([0-9][0-9])"))
vGC <- as.double(str_extract(grep("GC.*time.*[0-9]*.[^\\%]",contents, value=TRUE),
"([0-9]+)\\.([0-9][0-9])"))
vEXIT <- as.double(str_extract(grep("EXIT.*time.*[0-9]",contents, value=TRUE),
"([0-9]+)\\.([0-9][0-9])"))
vTOTAL <- as.double(str_extract(grep("Total.*time.*[0-9]",contents, value=TRUE),
"([0-9]+)\\.([0-9][0-9])"))
grep("GC.*time.*[0-9]*.[^\\%]",contents, value=TRUE)
grep("GC.*time.*([0-9]+)\\.([0-9][0-9])s",contents, value=TRUE)
source('D:/TEMP/PE/Old/stats.R')
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/GitHub/Project-Euler/Statistics/stats.R')
peData$Date = Sys.Date()
View(peData)
?write.csv
View(peData)
write.csv(peData,"peData.csv",row.names=FALSE,append=TRUE)
View(peData)
?write.table
write.table(peData,"peData.csv",row.names=FALSE,append=TRUE)
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/GitHub/Project-Euler/Statistics/stats.R')
source('~/GitHub/Project-Euler/Statistics/stats.R')
ggsave(paste("PDF\peComparisons",Sys.Date(),".pdf") , width=12, height=8, dpi=100)
ggsave(paste("PDF\\peComparisons",Sys.Date(),".pdf") , width=12, height=8, dpi=100)
ggsave(paste("JPEG\peComparisons",Sys.Date(),".jpeg") , width=12, height=8, dpi=100)
ggsave(paste("JPEG\\peComparisons",Sys.Date(),".jpeg") , width=12, height=8, dpi=100)
source('~/GitHub/Project-Euler/Statistics/stats.R')
