{-
Consider the fraction, n/d, where n and d are positive integers. If n<d and HCF(n,d)=1, 
it is called a reduced proper fraction.

If we list the set of reduced proper fractions for d â‰¤ 8 in ascending order of size, we get:

1/8, 1/7, 1/6, 1/5, 1/4, 2/7, 1/3, 3/8, 2/5, 3/7, 1/2, 
4/7, 3/5, 5/8, 2/3, 5/7, 3/4, 4/5, 5/6, 6/7, 7/8

It can be seen that there are 3 fractions between 1/3 and 1/2.

How many fractions lie between 1/3 and 1/2 in the sorted set of reduced
proper fractions for d <= 12,000?
-}

import           Data.Ratio

-- Brute force approach

-- Produce all possible fractions
fracs :: [Ratio Integer]
fracs = [a % b |    b <- [1..12000], 
                    a <- [(b `div` 3 - 1)..(b `div` 2 + 1)], 
                    a % b < 1 % 2, 
                    a % b > 1 % 3, 
                    gcd a b == 1]

-- Print and write out the answer
main :: IO()
main = do
        let ans = length fracs
        writeFile "pe73.txt" $ show ans
        print ans
